@import "tailwindcss";
@import "tw-animate-css";
@tailwind base;
@tailwind components;
@tailwind utilities;

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(100% 0.00011 271.152);
  --foreground: oklch(0.15 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.15 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.15 0 0);
  --primary: oklch(0.2 0 0);
  --primary-foreground: oklch(0.98 0 0);
  --secondary: oklch(0.95 0 0);
  --secondary-foreground: oklch(0.2 0 0);
  --muted: oklch(0.96 0 0);
  --muted-foreground: oklch(0.5 0 0);
  --accent: oklch(0.95 0 0);
  --accent-foreground: oklch(0.2 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.9 0 0);
  --input: oklch(0.9 0 0);
  --ring: oklch(0.7 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.98 0 0);
  --sidebar-foreground: oklch(0.15 0 0);
  --sidebar-primary: oklch(0.2 0 0);
  --sidebar-primary-foreground: oklch(0.98 0 0);
  --sidebar-accent: oklch(0.95 0 0);
  --sidebar-accent-foreground: oklch(0.2 0 0);
  --sidebar-border: oklch(0.9 0 0);
  --sidebar-ring: oklch(0.7 0 0);
}

.dark {
  --background: oklch(23.075% 0.00003 271.152);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* --------------------------------------------- */
/* 游눫 Ajustes tipogr치ficos (versi칩n compacta 12 px) */
/* --------------------------------------------- */

.prose {
  @apply text-[13px] leading-[1.6] text-zinc-600 dark:text-zinc-300;
  font-family: var(--font-geist-sans);
  max-width: 650px;
  margin-left: auto;
  margin-right: auto;
}

/* Titulares escalados suavemente */
.prose h1 {
  @apply mt-7 mb-3 text-[16.5px] font-semibold tracking-tight text-zinc-900 dark:text-zinc-100;
}
.prose h2 {
  @apply mt-6 mb-2 text-[15px] font-semibold tracking-tight text-zinc-800 dark:text-zinc-200;
}
.prose h3 {
  @apply mt-5 mb-1 text-[13.5px] font-medium tracking-tight text-zinc-700 dark:text-zinc-300;
}

/* Texto general */
.prose p {
  @apply mb-3 text-[13px] leading-[1.6] text-zinc-600 dark:text-zinc-300;
}

/* Listas y citas */
.prose blockquote {
  @apply my-3 border-l-2 pl-3 italic text-zinc-500 dark:text-zinc-400;
}
.prose ul,
.prose ol {
  @apply my-2 ml-5 space-y-[0.3rem];
}
.prose li {
  @apply text-[13px] leading-[1.55] text-zinc-600 dark:text-zinc-300;
}

/* Bloques de c칩digo */
.prose pre {
  @apply my-2 overflow-x-auto rounded-md border border-zinc-300 dark:border-white/10
    bg-zinc-50 dark:bg-white/[0.03] p-2 text-[13px] leading-[1.35] font-mono;
}
.prose code {
  @apply text-[13px] leading-[1.35] font-mono text-zinc-700 dark:text-zinc-200;
}

/* C칩digo inline */
.prose :where(code):not(:where(pre *)) {
  background: rgb(0 0 0 / .05);
  padding: 0.1rem 0.3rem;
  border-radius: 0.25rem;
}

/* Im치genes */
.prose img {
  @apply my-4 rounded-lg border border-zinc-300 dark:border-white/10 shadow-sm;
}

/* L칤nea divisoria */
.prose hr {
  @apply my-4 border-zinc-300 dark:border-white/10;
}

/* Enlaces */
.prose :where(a):not(:where(.not-prose *)) {
  text-decoration: underline;
  text-underline-offset: 3px;
  text-decoration-color: rgb(0 0 0 / .2);
}
.dark .prose :where(a):not(:where(.not-prose *)) {
  text-decoration-color: rgb(255 255 255 / .2);
}
.prose :where(a:hover):not(:where(.not-prose *)) {
  text-decoration-color: rgb(0 0 0 / .5);
}
.dark .prose :where(a:hover):not(:where(.not-prose *)) {
  text-decoration-color: rgb(255 255 255 / .5);
}
